import {
  require_prop_types
} from "./chunk-WAEUQQFE.js";
import {
  require_react
} from "./chunk-B3JD6YEU.js";
import {
  __commonJS,
  __toESM
} from "./chunk-OZI5HTJH.js";

// node_modules/attr-accept/dist/es/index.js
var require_es = __commonJS({
  "node_modules/attr-accept/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = function(file, acceptedFiles) {
      if (file && acceptedFiles) {
        var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
        var fileName = file.name || "";
        var mimeType = (file.type || "").toLowerCase();
        var baseMimeType = mimeType.replace(/\/.*$/, "");
        return acceptedFilesArray.some(function(type) {
          var validType = type.trim().toLowerCase();
          if (validType.charAt(0) === ".") {
            return fileName.toLowerCase().endsWith(validType);
          } else if (validType.endsWith("/*")) {
            return baseMimeType === validType.replace(/\/.*$/, "");
          }
          return mimeType === validType;
        });
      }
      return true;
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module) {
    "use strict";
    module.exports = function isObject2(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module) {
    "use strict";
    var isObject2 = require_isobject();
    function isObjectObject(o4) {
      return isObject2(o4) === true && Object.prototype.toString.call(o4) === "[object Object]";
    }
    module.exports = function isPlainObject(o4) {
      var ctor, prot;
      if (isObjectObject(o4) === false)
        return false;
      ctor = o4.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  "node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    var isPlainObject = require_is_plain_object();
    module.exports = function isExtendable(val) {
      return isPlainObject(val) || typeof val === "function" || Array.isArray(val);
    };
  }
});

// node_modules/for-in/index.js
var require_for_in = __commonJS({
  "node_modules/for-in/index.js"(exports, module) {
    "use strict";
    module.exports = function forIn(obj, fn, thisArg) {
      for (var key in obj) {
        if (fn.call(thisArg, obj[key], key, obj) === false) {
          break;
        }
      }
    };
  }
});

// node_modules/mixin-deep/index.js
var require_mixin_deep = __commonJS({
  "node_modules/mixin-deep/index.js"(exports, module) {
    "use strict";
    var isExtendable = require_is_extendable();
    var forIn = require_for_in();
    function mixinDeep(target, objects) {
      var len = arguments.length, i4 = 0;
      while (++i4 < len) {
        var obj = arguments[i4];
        if (isObject2(obj)) {
          forIn(obj, copy, target);
        }
      }
      return target;
    }
    function copy(val, key) {
      if (!isValidKey(key)) {
        return;
      }
      var obj = this[key];
      if (isObject2(val) && isObject2(obj)) {
        mixinDeep(obj, val);
      } else {
        this[key] = val;
      }
    }
    function isObject2(val) {
      return isExtendable(val) && !Array.isArray(val);
    }
    function isValidKey(key) {
      return key !== "__proto__" && key !== "constructor" && key !== "prototype";
    }
    module.exports = mixinDeep;
  }
});

// node_modules/get-value/index.js
var require_get_value = __commonJS({
  "node_modules/get-value/index.js"(exports, module) {
    module.exports = function(obj, prop, a4, b4, c4) {
      if (!isObject2(obj) || !prop) {
        return obj;
      }
      prop = toString(prop);
      if (a4)
        prop += "." + toString(a4);
      if (b4)
        prop += "." + toString(b4);
      if (c4)
        prop += "." + toString(c4);
      if (prop in obj) {
        return obj[prop];
      }
      var segs = prop.split(".");
      var len = segs.length;
      var i4 = -1;
      while (obj && ++i4 < len) {
        var key = segs[i4];
        while (key[key.length - 1] === "\\") {
          key = key.slice(0, -1) + "." + segs[++i4];
        }
        obj = obj[key];
      }
      return obj;
    };
    function isObject2(val) {
      return val !== null && (typeof val === "object" || typeof val === "function");
    }
    function toString(val) {
      if (!val)
        return "";
      if (Array.isArray(val)) {
        return val.join(".");
      }
      return val;
    }
  }
});

// node_modules/assign-symbols/index.js
var require_assign_symbols = __commonJS({
  "node_modules/assign-symbols/index.js"(exports, module) {
    "use strict";
    module.exports = function(receiver, objects) {
      if (receiver === null || typeof receiver === "undefined") {
        throw new TypeError("expected first argument to be an object.");
      }
      if (typeof objects === "undefined" || typeof Symbol === "undefined") {
        return receiver;
      }
      if (typeof Object.getOwnPropertySymbols !== "function") {
        return receiver;
      }
      var isEnumerable = Object.prototype.propertyIsEnumerable;
      var target = Object(receiver);
      var len = arguments.length, i4 = 0;
      while (++i4 < len) {
        var provider = Object(arguments[i4]);
        var names = Object.getOwnPropertySymbols(provider);
        for (var j3 = 0; j3 < names.length; j3++) {
          var key = names[j3];
          if (isEnumerable.call(provider, key)) {
            target[key] = provider[key];
          }
        }
      }
      return target;
    };
  }
});

// node_modules/split-string/node_modules/extend-shallow/index.js
var require_extend_shallow = __commonJS({
  "node_modules/split-string/node_modules/extend-shallow/index.js"(exports, module) {
    "use strict";
    var isExtendable = require_is_extendable();
    var assignSymbols = require_assign_symbols();
    module.exports = Object.assign || function(obj) {
      if (obj === null || typeof obj === "undefined") {
        throw new TypeError("Cannot convert undefined or null to object");
      }
      if (!isObject2(obj)) {
        obj = {};
      }
      for (var i4 = 1; i4 < arguments.length; i4++) {
        var val = arguments[i4];
        if (isString(val)) {
          val = toObject(val);
        }
        if (isObject2(val)) {
          assign(obj, val);
          assignSymbols(obj, val);
        }
      }
      return obj;
    };
    function assign(a4, b4) {
      for (var key in b4) {
        if (hasOwn(b4, key)) {
          a4[key] = b4[key];
        }
      }
    }
    function isString(val) {
      return val && typeof val === "string";
    }
    function toObject(str) {
      var obj = {};
      for (var i4 in str) {
        obj[i4] = str[i4];
      }
      return obj;
    }
    function isObject2(val) {
      return val && typeof val === "object" || isExtendable(val);
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  }
});

// node_modules/split-string/index.js
var require_split_string = __commonJS({
  "node_modules/split-string/index.js"(exports, module) {
    "use strict";
    var extend = require_extend_shallow();
    module.exports = function(str, options, fn) {
      if (typeof str !== "string") {
        throw new TypeError("expected a string");
      }
      if (typeof options === "function") {
        fn = options;
        options = null;
      }
      if (typeof options === "string") {
        options = { sep: options };
      }
      var opts = extend({ sep: "." }, options);
      var quotes = opts.quotes || ['"', "'", "`"];
      var brackets;
      if (opts.brackets === true) {
        brackets = {
          "<": ">",
          "(": ")",
          "[": "]",
          "{": "}"
        };
      } else if (opts.brackets) {
        brackets = opts.brackets;
      }
      var tokens = [];
      var stack = [];
      var arr = [""];
      var sep = opts.sep;
      var len = str.length;
      var idx = -1;
      var closeIdx;
      function expected() {
        if (brackets && stack.length) {
          return brackets[stack[stack.length - 1]];
        }
      }
      while (++idx < len) {
        var ch = str[idx];
        var next = str[idx + 1];
        var tok = { val: ch, idx, arr, str };
        tokens.push(tok);
        if (ch === "\\") {
          tok.val = keepEscaping(opts, str, idx) === true ? ch + next : next;
          tok.escaped = true;
          if (typeof fn === "function") {
            fn(tok);
          }
          arr[arr.length - 1] += tok.val;
          idx++;
          continue;
        }
        if (brackets && brackets[ch]) {
          stack.push(ch);
          var e4 = expected();
          var i4 = idx + 1;
          if (str.indexOf(e4, i4 + 1) !== -1) {
            while (stack.length && i4 < len) {
              var s4 = str[++i4];
              if (s4 === "\\") {
                s4++;
                continue;
              }
              if (quotes.indexOf(s4) !== -1) {
                i4 = getClosingQuote(str, s4, i4 + 1);
                continue;
              }
              e4 = expected();
              if (stack.length && str.indexOf(e4, i4 + 1) === -1) {
                break;
              }
              if (brackets[s4]) {
                stack.push(s4);
                continue;
              }
              if (e4 === s4) {
                stack.pop();
              }
            }
          }
          closeIdx = i4;
          if (closeIdx === -1) {
            arr[arr.length - 1] += ch;
            continue;
          }
          ch = str.slice(idx, closeIdx + 1);
          tok.val = ch;
          tok.idx = idx = closeIdx;
        }
        if (quotes.indexOf(ch) !== -1) {
          closeIdx = getClosingQuote(str, ch, idx + 1);
          if (closeIdx === -1) {
            arr[arr.length - 1] += ch;
            continue;
          }
          if (keepQuotes(ch, opts) === true) {
            ch = str.slice(idx, closeIdx + 1);
          } else {
            ch = str.slice(idx + 1, closeIdx);
          }
          tok.val = ch;
          tok.idx = idx = closeIdx;
        }
        if (typeof fn === "function") {
          fn(tok, tokens);
          ch = tok.val;
          idx = tok.idx;
        }
        if (tok.val === sep && tok.split !== false) {
          arr.push("");
          continue;
        }
        arr[arr.length - 1] += tok.val;
      }
      return arr;
    };
    function getClosingQuote(str, ch, i4, brackets) {
      var idx = str.indexOf(ch, i4);
      if (str.charAt(idx - 1) === "\\") {
        return getClosingQuote(str, ch, idx + 1);
      }
      return idx;
    }
    function keepQuotes(ch, opts) {
      if (opts.keepDoubleQuotes === true && ch === '"')
        return true;
      if (opts.keepSingleQuotes === true && ch === "'")
        return true;
      return opts.keepQuotes;
    }
    function keepEscaping(opts, str, idx) {
      if (typeof opts.keepEscaping === "function") {
        return opts.keepEscaping(str, idx);
      }
      return opts.keepEscaping === true || str[idx + 1] === "\\";
    }
  }
});

// node_modules/extend-shallow/node_modules/is-extendable/index.js
var require_is_extendable2 = __commonJS({
  "node_modules/extend-shallow/node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    module.exports = function isExtendable(val) {
      return typeof val !== "undefined" && val !== null && (typeof val === "object" || typeof val === "function");
    };
  }
});

// node_modules/extend-shallow/index.js
var require_extend_shallow2 = __commonJS({
  "node_modules/extend-shallow/index.js"(exports, module) {
    "use strict";
    var isObject2 = require_is_extendable2();
    module.exports = function extend(o4) {
      if (!isObject2(o4)) {
        o4 = {};
      }
      var len = arguments.length;
      for (var i4 = 1; i4 < len; i4++) {
        var obj = arguments[i4];
        if (isObject2(obj)) {
          assign(o4, obj);
        }
      }
      return o4;
    };
    function assign(a4, b4) {
      for (var key in b4) {
        if (hasOwn(b4, key)) {
          a4[key] = b4[key];
        }
      }
    }
    function hasOwn(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
  }
});

// node_modules/set-value/node_modules/is-extendable/index.js
var require_is_extendable3 = __commonJS({
  "node_modules/set-value/node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    module.exports = function isExtendable(val) {
      return typeof val !== "undefined" && val !== null && (typeof val === "object" || typeof val === "function");
    };
  }
});

// node_modules/set-value/index.js
var require_set_value = __commonJS({
  "node_modules/set-value/index.js"(exports, module) {
    "use strict";
    var split2 = require_split_string();
    var extend = require_extend_shallow2();
    var isPlainObject = require_is_plain_object();
    var isObject2 = require_is_extendable3();
    module.exports = function(obj, prop, val) {
      if (!isObject2(obj)) {
        return obj;
      }
      if (Array.isArray(prop)) {
        prop = [].concat.apply([], prop).join(".");
      }
      if (typeof prop !== "string") {
        return obj;
      }
      var keys = split2(prop, { sep: ".", brackets: true }).filter(isValidKey);
      var len = keys.length;
      var idx = -1;
      var current = obj;
      while (++idx < len) {
        var key = keys[idx];
        if (idx !== len - 1) {
          if (!isObject2(current[key])) {
            current[key] = {};
          }
          current = current[key];
          continue;
        }
        if (isPlainObject(current[key]) && isPlainObject(val)) {
          current[key] = extend({}, current[key], val);
        } else {
          current[key] = val;
        }
      }
      return obj;
    };
    function isValidKey(key) {
      return key !== "__proto__" && key !== "constructor" && key !== "prototype";
    }
  }
});

// node_modules/merge-value/index.js
var require_merge_value = __commonJS({
  "node_modules/merge-value/index.js"(exports, module) {
    "use strict";
    var isObject2 = require_is_extendable();
    var merge = require_mixin_deep();
    var get = require_get_value();
    var set = require_set_value();
    module.exports = function mergeValue(obj, prop, value) {
      if (!isObject2(obj)) {
        throw new TypeError("expected an object");
      }
      if (typeof prop !== "string" || value == null) {
        return merge.apply(null, arguments);
      }
      if (typeof value === "string") {
        set(obj, prop, value);
        return obj;
      }
      var current = get(obj, prop);
      if (isObject2(value) && isObject2(current)) {
        value = merge({}, current, value);
      }
      set(obj, prop, value);
      return obj;
    };
  }
});

// node_modules/dequal/lite/index.mjs
var has = Object.prototype.hasOwnProperty;
function dequal(foo, bar) {
  var ctor, len;
  if (foo === bar)
    return true;
  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
    if (ctor === Date)
      return foo.getTime() === bar.getTime();
    if (ctor === RegExp)
      return foo.toString() === bar.toString();
    if (ctor === Array) {
      if ((len = foo.length) === bar.length) {
        while (len-- && dequal(foo[len], bar[len]))
          ;
      }
      return len === -1;
    }
    if (!ctor || typeof foo === "object") {
      len = 0;
      for (ctor in foo) {
        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))
          return false;
        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))
          return false;
      }
      return Object.keys(bar).length === len;
    }
  }
  return foo !== foo && bar !== bar;
}

// node_modules/v8n/dist/v8n.esm.js
var Rule = function Rule2(name, fn, args, modifiers) {
  this.name = name;
  this.fn = fn;
  this.args = args;
  this.modifiers = modifiers;
};
Rule.prototype._test = function _test(value) {
  var fn = this.fn;
  try {
    testAux(this.modifiers.slice(), fn, this)(value);
  } catch (ex) {
    fn = function() {
      return false;
    };
  }
  try {
    return testAux(this.modifiers.slice(), fn, this)(value);
  } catch (ex$1) {
    return false;
  }
};
Rule.prototype._check = function _check(value) {
  try {
    testAux(this.modifiers.slice(), this.fn, this)(value);
  } catch (ex) {
    if (testAux(this.modifiers.slice(), function(it) {
      return it;
    }, this)(false)) {
      return;
    }
  }
  if (!testAux(this.modifiers.slice(), this.fn, this)(value)) {
    throw null;
  }
};
Rule.prototype._testAsync = function _testAsync(value) {
  var this$1 = this;
  return new Promise(function(resolve, reject) {
    testAsyncAux(
      this$1.modifiers.slice(),
      this$1.fn,
      this$1
    )(value).then(function(valid) {
      if (valid) {
        resolve(value);
      } else {
        reject(null);
      }
    }).catch(function(ex) {
      return reject(ex);
    });
  });
};
function pickFn(fn, variant) {
  if (variant === void 0)
    variant = "simple";
  return typeof fn === "object" ? fn[variant] : fn;
}
function testAux(modifiers, fn, rule) {
  if (modifiers.length) {
    var modifier = modifiers.shift();
    var nextFn = testAux(modifiers, fn, rule);
    return modifier.perform(nextFn, rule);
  } else {
    return pickFn(fn);
  }
}
function testAsyncAux(modifiers, fn, rule) {
  if (modifiers.length) {
    var modifier = modifiers.shift();
    var nextFn = testAsyncAux(modifiers, fn, rule);
    return modifier.performAsync(nextFn, rule);
  } else {
    return function(value) {
      return Promise.resolve(pickFn(fn, "async")(value));
    };
  }
}
var Modifier = function Modifier2(name, perform, performAsync) {
  this.name = name;
  this.perform = perform;
  this.performAsync = performAsync;
};
var ValidationError = function(Error2) {
  function ValidationError2(rule, value, cause, target) {
    var remaining = [], len = arguments.length - 4;
    while (len-- > 0)
      remaining[len] = arguments[len + 4];
    Error2.call(this, remaining);
    if (Error2.captureStackTrace) {
      Error2.captureStackTrace(this, ValidationError2);
    }
    this.rule = rule;
    this.value = value;
    this.cause = cause;
    this.target = target;
  }
  if (Error2)
    ValidationError2.__proto__ = Error2;
  ValidationError2.prototype = Object.create(Error2 && Error2.prototype);
  ValidationError2.prototype.constructor = ValidationError2;
  return ValidationError2;
}(Error);
var Context = function Context2(chain, nextRuleModifiers) {
  if (chain === void 0)
    chain = [];
  if (nextRuleModifiers === void 0)
    nextRuleModifiers = [];
  this.chain = chain;
  this.nextRuleModifiers = nextRuleModifiers;
};
Context.prototype._applyRule = function _applyRule(ruleFn, name) {
  var this$1 = this;
  return function() {
    var args = [], len = arguments.length;
    while (len--)
      args[len] = arguments[len];
    this$1.chain.push(
      new Rule(name, ruleFn.apply(this$1, args), args, this$1.nextRuleModifiers)
    );
    this$1.nextRuleModifiers = [];
    return this$1;
  };
};
Context.prototype._applyModifier = function _applyModifier(modifier, name) {
  this.nextRuleModifiers.push(
    new Modifier(name, modifier.simple, modifier.async)
  );
  return this;
};
Context.prototype._clone = function _clone() {
  return new Context(this.chain.slice(), this.nextRuleModifiers.slice());
};
Context.prototype.test = function test(value) {
  return this.chain.every(function(rule) {
    return rule._test(value);
  });
};
Context.prototype.testAll = function testAll(value) {
  var err = [];
  this.chain.forEach(function(rule) {
    try {
      rule._check(value);
    } catch (ex) {
      err.push(new ValidationError(rule, value, ex));
    }
  });
  return err;
};
Context.prototype.check = function check(value) {
  this.chain.forEach(function(rule) {
    try {
      rule._check(value);
    } catch (ex) {
      throw new ValidationError(rule, value, ex);
    }
  });
};
Context.prototype.testAsync = function testAsync(value) {
  var this$1 = this;
  return new Promise(function(resolve, reject) {
    executeAsyncRules(value, this$1.chain.slice(), resolve, reject);
  });
};
function executeAsyncRules(value, rules, resolve, reject) {
  if (rules.length) {
    var rule = rules.shift();
    rule._testAsync(value).then(
      function() {
        executeAsyncRules(value, rules, resolve, reject);
      },
      function(cause) {
        reject(new ValidationError(rule, value, cause));
      }
    );
  } else {
    resolve(value);
  }
}
var consideredEmpty = function(value, considerTrimmedEmptyString) {
  if (considerTrimmedEmptyString && typeof value === "string" && value.trim().length === 0) {
    return true;
  }
  return value === void 0 || value === null;
};
function optional(validation, considerTrimmedEmptyString) {
  if (considerTrimmedEmptyString === void 0)
    considerTrimmedEmptyString = false;
  return {
    simple: function(value) {
      return consideredEmpty(value, considerTrimmedEmptyString) || validation.check(value) === void 0;
    },
    async: function(value) {
      return consideredEmpty(value, considerTrimmedEmptyString) || validation.testAsync(value);
    }
  };
}
function v8n() {
  return typeof Proxy !== "undefined" ? proxyContext(new Context()) : proxylessContext(new Context());
}
var customRules = {};
v8n.extend = function(newRules) {
  Object.assign(customRules, newRules);
};
v8n.clearCustomRules = function() {
  customRules = {};
};
function proxyContext(context) {
  return new Proxy(context, {
    get: function get(obj, prop) {
      if (prop in obj) {
        return obj[prop];
      }
      var newContext = proxyContext(context._clone());
      if (prop in availableModifiers) {
        return newContext._applyModifier(availableModifiers[prop], prop);
      }
      if (prop in customRules) {
        return newContext._applyRule(customRules[prop], prop);
      }
      if (prop in availableRules) {
        return newContext._applyRule(availableRules[prop], prop);
      }
    }
  });
}
function proxylessContext(context) {
  var addRuleSet = function(ruleSet, targetContext) {
    Object.keys(ruleSet).forEach(function(prop) {
      targetContext[prop] = function() {
        var args = [], len = arguments.length;
        while (len--)
          args[len] = arguments[len];
        var newContext = proxylessContext(targetContext._clone());
        var contextWithRuleApplied = newContext._applyRule(
          ruleSet[prop],
          prop
        ).apply(void 0, args);
        return contextWithRuleApplied;
      };
    });
    return targetContext;
  };
  var contextWithAvailableRules = addRuleSet(availableRules, context);
  var contextWithAllRules = addRuleSet(
    customRules,
    contextWithAvailableRules
  );
  Object.keys(availableModifiers).forEach(function(prop) {
    Object.defineProperty(contextWithAllRules, prop, {
      get: function() {
        var newContext = proxylessContext(contextWithAllRules._clone());
        return newContext._applyModifier(availableModifiers[prop], prop);
      }
    });
  });
  return contextWithAllRules;
}
var availableModifiers = {
  not: {
    simple: function(fn) {
      return function(value) {
        return !fn(value);
      };
    },
    async: function(fn) {
      return function(value) {
        return Promise.resolve(fn(value)).then(function(result) {
          return !result;
        }).catch(function() {
          return true;
        });
      };
    }
  },
  some: {
    simple: function(fn) {
      return function(value) {
        return split(value).some(function(item) {
          try {
            return fn(item);
          } catch (ex) {
            return false;
          }
        });
      };
    },
    async: function(fn) {
      return function(value) {
        return Promise.all(
          split(value).map(function(item) {
            try {
              return fn(item).catch(function() {
                return false;
              });
            } catch (ex) {
              return false;
            }
          })
        ).then(function(result) {
          return result.some(Boolean);
        });
      };
    }
  },
  every: {
    simple: function(fn) {
      return function(value) {
        return value !== false && split(value).every(fn);
      };
    },
    async: function(fn) {
      return function(value) {
        return Promise.all(split(value).map(fn)).then(function(result) {
          return result.every(Boolean);
        });
      };
    }
  },
  strict: {
    simple: function(fn, rule) {
      return function(value) {
        if (isSchemaRule(rule) && value && typeof value === "object") {
          return Object.keys(rule.args[0]).length === Object.keys(value).length && fn(value);
        }
        return fn(value);
      };
    },
    async: function(fn, rule) {
      return function(value) {
        return Promise.resolve(fn(value)).then(function(result) {
          if (isSchemaRule(rule) && value && typeof value === "object") {
            return Object.keys(rule.args[0]).length === Object.keys(value).length && result;
          }
          return result;
        }).catch(function() {
          return false;
        });
      };
    }
  }
};
function isSchemaRule(rule) {
  return rule && rule.name === "schema" && rule.args.length > 0 && typeof rule.args[0] === "object";
}
function split(value) {
  if (typeof value === "string") {
    return value.split("");
  }
  return value;
}
var availableRules = {
  // Value
  equal: function(expected) {
    return function(value) {
      return value == expected;
    };
  },
  exact: function(expected) {
    return function(value) {
      return value === expected;
    };
  },
  // Types
  number: function(allowInfinite) {
    if (allowInfinite === void 0)
      allowInfinite = true;
    return function(value) {
      return typeof value === "number" && (allowInfinite || isFinite(value));
    };
  },
  integer: function() {
    return function(value) {
      var isInteger = Number.isInteger || isIntegerPolyfill;
      return isInteger(value);
    };
  },
  numeric: function() {
    return function(value) {
      return !isNaN(parseFloat(value)) && isFinite(value);
    };
  },
  string: function() {
    return testType("string");
  },
  boolean: function() {
    return testType("boolean");
  },
  undefined: function() {
    return testType("undefined");
  },
  null: function() {
    return testType("null");
  },
  array: function() {
    return testType("array");
  },
  object: function() {
    return testType("object");
  },
  instanceOf: function(instance) {
    return function(value) {
      return value instanceof instance;
    };
  },
  // Pattern
  pattern: function(expected) {
    return function(value) {
      return expected.test(value);
    };
  },
  lowercase: function() {
    return function(value) {
      return typeof value === "boolean" || value === value.toLowerCase() && value.trim() !== "";
    };
  },
  uppercase: function() {
    return function(value) {
      return value === value.toUpperCase() && value.trim() !== "";
    };
  },
  vowel: function() {
    return function(value) {
      return /^[aeiou]+$/i.test(value);
    };
  },
  consonant: function() {
    return function(value) {
      return /^(?=[^aeiou])([a-z]+)$/i.test(value);
    };
  },
  // Value at
  first: function(expected) {
    return function(value) {
      return value[0] == expected;
    };
  },
  last: function(expected) {
    return function(value) {
      return value[value.length - 1] == expected;
    };
  },
  // Length
  empty: function() {
    return function(value) {
      return value.length === 0;
    };
  },
  length: function(min, max) {
    return function(value) {
      return value.length >= min && value.length <= (max || min);
    };
  },
  minLength: function(min) {
    return function(value) {
      return value.length >= min;
    };
  },
  maxLength: function(max) {
    return function(value) {
      return value.length <= max;
    };
  },
  // Range
  negative: function() {
    return function(value) {
      return value < 0;
    };
  },
  positive: function() {
    return function(value) {
      return value >= 0;
    };
  },
  between: function(a4, b4) {
    return function(value) {
      return value >= a4 && value <= b4;
    };
  },
  range: function(a4, b4) {
    return function(value) {
      return value >= a4 && value <= b4;
    };
  },
  lessThan: function(n4) {
    return function(value) {
      return value < n4;
    };
  },
  lessThanOrEqual: function(n4) {
    return function(value) {
      return value <= n4;
    };
  },
  greaterThan: function(n4) {
    return function(value) {
      return value > n4;
    };
  },
  greaterThanOrEqual: function(n4) {
    return function(value) {
      return value >= n4;
    };
  },
  // Divisible
  even: function() {
    return function(value) {
      return value % 2 === 0;
    };
  },
  odd: function() {
    return function(value) {
      return value % 2 !== 0;
    };
  },
  includes: function(expected) {
    return function(value) {
      return ~value.indexOf(expected);
    };
  },
  schema: function(schema) {
    return testSchema(schema);
  },
  // branching
  passesAnyOf: function() {
    var validations = [], len = arguments.length;
    while (len--)
      validations[len] = arguments[len];
    return function(value) {
      return validations.some(function(validation) {
        return validation.test(value);
      });
    };
  },
  optional
};
function testType(expected) {
  return function(value) {
    return Array.isArray(value) && expected === "array" || value === null && expected === "null" || typeof value === expected;
  };
}
function isIntegerPolyfill(value) {
  return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
}
function testSchema(schema) {
  return {
    simple: function(value) {
      var causes = [];
      Object.keys(schema).forEach(function(key) {
        var nestedValidation = schema[key];
        try {
          nestedValidation.check((value || {})[key]);
        } catch (ex) {
          ex.target = key;
          causes.push(ex);
        }
      });
      if (causes.length > 0) {
        throw causes;
      }
      return true;
    },
    async: function(value) {
      var causes = [];
      var nested = Object.keys(schema).map(function(key) {
        var nestedValidation = schema[key];
        return nestedValidation.testAsync((value || {})[key]).catch(function(ex) {
          ex.target = key;
          causes.push(ex);
        });
      });
      return Promise.all(nested).then(function() {
        if (causes.length > 0) {
          throw causes;
        }
        return true;
      });
    }
  };
}
var v8n_esm_default = v8n;

// node_modules/@stitches/react/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var e = "colors";
var t = "sizes";
var r = "space";
var n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
var i = (e4, t4) => "function" == typeof t4 ? { "()": Function.prototype.toString.call(t4) } : t4;
var o = () => {
  const e4 = /* @__PURE__ */ Object.create(null);
  return (t4, r4, ...n4) => {
    const o4 = ((e5) => JSON.stringify(e5, i))(t4);
    return o4 in e4 ? e4[o4] : e4[o4] = r4(t4, ...n4);
  };
};
var l = Symbol.for("sxs.internal");
var s = (e4, t4) => Object.defineProperties(e4, Object.getOwnPropertyDescriptors(t4));
var a = (e4) => {
  for (const t4 in e4)
    return true;
  return false;
};
var { hasOwnProperty: c } = Object.prototype;
var d = (e4) => e4.includes("-") ? e4 : e4.replace(/[A-Z]/g, (e5) => "-" + e5.toLowerCase());
var g = /\s+(?![^()]*\))/;
var p = (e4) => (t4) => e4(..."string" == typeof t4 ? String(t4).split(g) : [t4]);
var u = { appearance: (e4) => ({ WebkitAppearance: e4, appearance: e4 }), backfaceVisibility: (e4) => ({ WebkitBackfaceVisibility: e4, backfaceVisibility: e4 }), backdropFilter: (e4) => ({ WebkitBackdropFilter: e4, backdropFilter: e4 }), backgroundClip: (e4) => ({ WebkitBackgroundClip: e4, backgroundClip: e4 }), boxDecorationBreak: (e4) => ({ WebkitBoxDecorationBreak: e4, boxDecorationBreak: e4 }), clipPath: (e4) => ({ WebkitClipPath: e4, clipPath: e4 }), content: (e4) => ({ content: e4.includes('"') || e4.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e4) ? e4 : `"${e4}"` }), hyphens: (e4) => ({ WebkitHyphens: e4, hyphens: e4 }), maskImage: (e4) => ({ WebkitMaskImage: e4, maskImage: e4 }), maskSize: (e4) => ({ WebkitMaskSize: e4, maskSize: e4 }), tabSize: (e4) => ({ MozTabSize: e4, tabSize: e4 }), textSizeAdjust: (e4) => ({ WebkitTextSizeAdjust: e4, textSizeAdjust: e4 }), userSelect: (e4) => ({ WebkitUserSelect: e4, userSelect: e4 }), marginBlock: p((e4, t4) => ({ marginBlockStart: e4, marginBlockEnd: t4 || e4 })), marginInline: p((e4, t4) => ({ marginInlineStart: e4, marginInlineEnd: t4 || e4 })), maxSize: p((e4, t4) => ({ maxBlockSize: e4, maxInlineSize: t4 || e4 })), minSize: p((e4, t4) => ({ minBlockSize: e4, minInlineSize: t4 || e4 })), paddingBlock: p((e4, t4) => ({ paddingBlockStart: e4, paddingBlockEnd: t4 || e4 })), paddingInline: p((e4, t4) => ({ paddingInlineStart: e4, paddingInlineEnd: t4 || e4 })) };
var h = /([\d.]+)([^]*)/;
var f = (e4, t4) => e4.length ? e4.reduce((e5, r4) => (e5.push(...t4.map((e6) => e6.includes("&") ? e6.replace(/&/g, /[ +>|~]/.test(r4) && /&.*&/.test(e6) ? `:is(${r4})` : r4) : r4 + " " + e6)), e5), []) : t4;
var m = (e4, t4) => e4 in b && "string" == typeof t4 ? t4.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t5, r4, n4, i4) => r4 + ("stretch" === n4 ? `-moz-available${i4};${d(e4)}:${r4}-webkit-fill-available` : `-moz-fit-content${i4};${d(e4)}:${r4}fit-content`) + i4) : String(t4);
var b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
var S = (e4) => e4 ? e4 + "-" : "";
var k = (e4, t4, r4) => e4.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e5, n4, i4, o4, l4) => "$" == o4 == !!i4 ? e5 : (n4 || "--" == o4 ? "calc(" : "") + "var(--" + ("$" === o4 ? S(t4) + (l4.includes("$") ? "" : S(r4)) + l4.replace(/\$/g, "-") : l4) + ")" + (n4 || "--" == o4 ? "*" + (n4 || "") + (i4 || "1") + ")" : ""));
var y = /\s*,\s*(?![^()]*\))/;
var B = Object.prototype.toString;
var $ = (e4, t4, r4, n4, i4) => {
  let o4, l4, s4;
  const a4 = (e5, t5, r5) => {
    let c4, g4;
    const p4 = (e6) => {
      for (c4 in e6) {
        const R3 = 64 === c4.charCodeAt(0), z2 = R3 && Array.isArray(e6[c4]) ? e6[c4] : [e6[c4]];
        for (g4 of z2) {
          const e7 = /[A-Z]/.test($4 = c4) ? $4 : $4.replace(/-[^]/g, (e8) => e8[1].toUpperCase()), z3 = "object" == typeof g4 && g4 && g4.toString === B && (!n4.utils[e7] || !t5.length);
          if (e7 in n4.utils && !z3) {
            const t6 = n4.utils[e7];
            if (t6 !== l4) {
              l4 = t6, p4(t6(g4)), l4 = null;
              continue;
            }
          } else if (e7 in u) {
            const t6 = u[e7];
            if (t6 !== s4) {
              s4 = t6, p4(t6(g4)), s4 = null;
              continue;
            }
          }
          if (R3 && (b4 = c4.slice(1) in n4.media ? "@media " + n4.media[c4.slice(1)] : c4, c4 = b4.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e8, t6, r6, n5, i5, o5) => {
            const l5 = h.test(t6), s5 = 0.0625 * (l5 ? -1 : 1), [a5, c5] = l5 ? [n5, t6] : [t6, n5];
            return "(" + ("=" === r6[0] ? "" : ">" === r6[0] === l5 ? "max-" : "min-") + a5 + ":" + ("=" !== r6[0] && 1 === r6.length ? c5.replace(h, (e9, t7, n6) => Number(t7) + s5 * (">" === r6 ? 1 : -1) + n6) : c5) + (i5 ? ") and (" + (">" === i5[0] ? "min-" : "max-") + a5 + ":" + (1 === i5.length ? o5.replace(h, (e9, t7, r7) => Number(t7) + s5 * (">" === i5 ? -1 : 1) + r7) : o5) : "") + ")";
          })), z3) {
            const e8 = R3 ? r5.concat(c4) : [...r5], n5 = R3 ? [...t5] : f(t5, c4.split(y));
            void 0 !== o4 && i4(x(...o4)), o4 = void 0, a4(g4, n5, e8);
          } else
            void 0 === o4 && (o4 = [[], t5, r5]), c4 = R3 || 36 !== c4.charCodeAt(0) ? c4 : `--${S(n4.prefix)}${c4.slice(1).replace(/\$/g, "-")}`, g4 = z3 ? g4 : "number" == typeof g4 ? g4 && e7 in I ? String(g4) + "px" : String(g4) : k(m(e7, null == g4 ? "" : g4), n4.prefix, n4.themeMap[e7]), o4[0].push(`${R3 ? `${c4} ` : `${d(c4)}:`}${g4}`);
        }
      }
      var b4, $4;
    };
    p4(e5), void 0 !== o4 && i4(x(...o4)), o4 = void 0;
  };
  a4(e4, t4, r4);
};
var x = (e4, t4, r4) => `${r4.map((e5) => `${e5}{`).join("")}${t4.length ? `${t4.join(",")}{` : ""}${e4.join(";")}${t4.length ? "}" : ""}${Array(r4.length ? r4.length + 1 : 0).join("}")}`;
var I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
var R = (e4) => String.fromCharCode(e4 + (e4 > 25 ? 39 : 97));
var z = (e4) => ((e5) => {
  let t4, r4 = "";
  for (t4 = Math.abs(e5); t4 > 52; t4 = t4 / 52 | 0)
    r4 = R(t4 % 52) + r4;
  return R(t4 % 52) + r4;
})(((e5, t4) => {
  let r4 = t4.length;
  for (; r4; )
    e5 = 33 * e5 ^ t4.charCodeAt(--r4);
  return e5;
})(5381, JSON.stringify(e4)) >>> 0);
var W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
var j = (e4) => {
  if (e4.href && !e4.href.startsWith(location.origin))
    return false;
  try {
    return !!e4.cssRules;
  } catch (e5) {
    return false;
  }
};
var E = (e4) => {
  let t4;
  const r4 = () => {
    const { cssRules: e5 } = t4.sheet;
    return [].map.call(e5, (r5, n5) => {
      const { cssText: i4 } = r5;
      let o4 = "";
      if (i4.startsWith("--sxs"))
        return "";
      if (e5[n5 - 1] && (o4 = e5[n5 - 1].cssText).startsWith("--sxs")) {
        if (!r5.cssRules.length)
          return "";
        for (const e6 in t4.rules)
          if (t4.rules[e6].group === r5)
            return `--sxs{--sxs:${[...t4.rules[e6].cache].join(" ")}}${i4}`;
        return r5.cssRules.length ? `${o4}${i4}` : "";
      }
      return i4;
    }).join("");
  }, n4 = () => {
    if (t4) {
      const { rules: e5, sheet: r5 } = t4;
      if (!r5.deleteRule) {
        for (; 3 === Object(Object(r5.cssRules)[0]).type; )
          r5.cssRules.splice(0, 1);
        r5.cssRules = [];
      }
      for (const t5 in e5)
        delete e5[t5];
    }
    const i4 = Object(e4).styleSheets || [];
    for (const e5 of i4)
      if (j(e5)) {
        for (let i5 = 0, o5 = e5.cssRules; o5[i5]; ++i5) {
          const l5 = Object(o5[i5]);
          if (1 !== l5.type)
            continue;
          const s4 = Object(o5[i5 + 1]);
          if (4 !== s4.type)
            continue;
          ++i5;
          const { cssText: a4 } = l5;
          if (!a4.startsWith("--sxs"))
            continue;
          const c4 = a4.slice(14, -3).trim().split(/\s+/), d4 = W[c4[0]];
          d4 && (t4 || (t4 = { sheet: e5, reset: n4, rules: {}, toString: r4 }), t4.rules[d4] = { group: s4, index: i5, cache: new Set(c4) });
        }
        if (t4)
          break;
      }
    if (!t4) {
      const i5 = (e5, t5) => ({ type: t5, cssRules: [], insertRule(e6, t6) {
        this.cssRules.splice(t6, 0, i5(e6, { import: 3, undefined: 1 }[(e6.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return "@media{}" === e5 ? `@media{${[].map.call(this.cssRules, (e6) => e6.cssText).join("")}}` : e5;
      } });
      t4 = { sheet: e4 ? (e4.head || e4).appendChild(document.createElement("style")).sheet : i5("", "text/css"), rules: {}, reset: n4, toString: r4 };
    }
    const { sheet: o4, rules: l4 } = t4;
    for (let e5 = W.length - 1; e5 >= 0; --e5) {
      const t5 = W[e5];
      if (!l4[t5]) {
        const r5 = W[e5 + 1], n5 = l4[r5] ? l4[r5].index : o4.cssRules.length;
        o4.insertRule("@media{}", n5), o4.insertRule(`--sxs{--sxs:${e5}}`, n5), l4[t5] = { group: o4.cssRules[n5 + 1], index: n5, cache: /* @__PURE__ */ new Set([e5]) };
      }
      v(l4[t5]);
    }
  };
  return n4(), t4;
};
var v = (e4) => {
  const t4 = e4.group;
  let r4 = t4.cssRules.length;
  e4.apply = (e5) => {
    try {
      t4.insertRule(e5, r4), ++r4;
    } catch (e6) {
    }
  };
};
var T = Symbol();
var w = o();
var M = (e4, t4) => w(e4, () => (...r4) => {
  let n4 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t5 of r4)
    if (null != t5)
      if (t5[l]) {
        null == n4.type && (n4.type = t5[l].type);
        for (const e5 of t5[l].composers)
          n4.composers.add(e5);
      } else
        t5.constructor !== Object || t5.$$typeof ? null == n4.type && (n4.type = t5) : n4.composers.add(C(t5, e4));
  return null == n4.type && (n4.type = "span"), n4.composers.size || n4.composers.add(["PJLV", {}, [], [], {}, []]), P(e4, n4, t4);
});
var C = ({ variants: e4, compoundVariants: t4, defaultVariants: r4, ...n4 }, i4) => {
  const o4 = `${S(i4.prefix)}c-${z(n4)}`, l4 = [], s4 = [], d4 = /* @__PURE__ */ Object.create(null), g4 = [];
  for (const e5 in r4)
    d4[e5] = String(r4[e5]);
  if ("object" == typeof e4 && e4)
    for (const t5 in e4) {
      p4 = d4, u4 = t5, c.call(p4, u4) || (d4[t5] = "undefined");
      const r5 = e4[t5];
      for (const e5 in r5) {
        const n5 = { [t5]: String(e5) };
        "undefined" === String(e5) && g4.push(t5);
        const i5 = r5[e5], o5 = [n5, i5, !a(i5)];
        l4.push(o5);
      }
    }
  var p4, u4;
  if ("object" == typeof t4 && t4)
    for (const e5 of t4) {
      let { css: t5, ...r5 } = e5;
      t5 = "object" == typeof t5 && t5 || {};
      for (const e6 in r5)
        r5[e6] = String(r5[e6]);
      const n5 = [r5, t5, !a(t5)];
      s4.push(n5);
    }
  return [o4, n4, l4, s4, d4, g4];
};
var P = (e4, t4, r4) => {
  const [n4, i4, o4, a4] = L(t4.composers), c4 = "function" == typeof t4.type || t4.type.$$typeof ? ((e5) => {
    function t5() {
      for (let r5 = 0; r5 < t5[T].length; r5++) {
        const [n5, i5] = t5[T][r5];
        e5.rules[n5].apply(i5);
      }
      return t5[T] = [], null;
    }
    return t5[T] = [], t5.rules = {}, W.forEach((e6) => t5.rules[e6] = { apply: (r5) => t5[T].push([e6, r5]) }), t5;
  })(r4) : null, d4 = (c4 || r4).rules, g4 = `.${n4}${i4.length > 1 ? `:where(.${i4.slice(1).join(".")})` : ""}`, p4 = (l4) => {
    l4 = "object" == typeof l4 && l4 || A;
    const { css: s4, ...p5 } = l4, u4 = {};
    for (const e5 in o4)
      if (delete p5[e5], e5 in l4) {
        let t5 = l4[e5];
        "object" == typeof t5 && t5 ? u4[e5] = { "@initial": o4[e5], ...t5 } : (t5 = String(t5), u4[e5] = "undefined" !== t5 || a4.has(e5) ? t5 : o4[e5]);
      } else
        u4[e5] = o4[e5];
    const h4 = /* @__PURE__ */ new Set([...i4]);
    for (const [n5, i5, o5, l5] of t4.composers) {
      r4.rules.styled.cache.has(n5) || (r4.rules.styled.cache.add(n5), $(i5, [`.${n5}`], [], e4, (e5) => {
        d4.styled.apply(e5);
      }));
      const t5 = O(o5, u4, e4.media), s5 = O(l5, u4, e4.media, true);
      for (const i6 of t5)
        if (void 0 !== i6)
          for (const [t6, o6, l6] of i6) {
            const i7 = `${n5}-${z(o6)}-${t6}`;
            h4.add(i7);
            const s6 = (l6 ? r4.rules.resonevar : r4.rules.onevar).cache, a5 = l6 ? d4.resonevar : d4.onevar;
            s6.has(i7) || (s6.add(i7), $(o6, [`.${i7}`], [], e4, (e5) => {
              a5.apply(e5);
            }));
          }
      for (const t6 of s5)
        if (void 0 !== t6)
          for (const [i6, o6] of t6) {
            const t7 = `${n5}-${z(o6)}-${i6}`;
            h4.add(t7), r4.rules.allvar.cache.has(t7) || (r4.rules.allvar.cache.add(t7), $(o6, [`.${t7}`], [], e4, (e5) => {
              d4.allvar.apply(e5);
            }));
          }
    }
    if ("object" == typeof s4 && s4) {
      const t5 = `${n4}-i${z(s4)}-css`;
      h4.add(t5), r4.rules.inline.cache.has(t5) || (r4.rules.inline.cache.add(t5), $(s4, [`.${t5}`], [], e4, (e5) => {
        d4.inline.apply(e5);
      }));
    }
    for (const e5 of String(l4.className || "").trim().split(/\s+/))
      e5 && h4.add(e5);
    const f4 = p5.className = [...h4].join(" ");
    return { type: t4.type, className: f4, selector: g4, props: p5, toString: () => f4, deferredInjector: c4 };
  };
  return s(p4, { className: n4, selector: g4, [l]: t4, toString: () => (r4.rules.styled.cache.has(n4) || p4(), n4) });
};
var L = (e4) => {
  let t4 = "";
  const r4 = [], n4 = {}, i4 = [];
  for (const [o4, , , , l4, s4] of e4) {
    "" === t4 && (t4 = o4), r4.push(o4), i4.push(...s4);
    for (const e5 in l4) {
      const t5 = l4[e5];
      (void 0 === n4[e5] || "undefined" !== t5 || s4.includes(t5)) && (n4[e5] = t5);
    }
  }
  return [t4, r4, n4, new Set(i4)];
};
var O = (e4, t4, r4, n4) => {
  const i4 = [];
  e:
    for (let [o4, l4, s4] of e4) {
      if (s4)
        continue;
      let e5, a4 = 0, c4 = false;
      for (e5 in o4) {
        const n5 = o4[e5];
        let i5 = t4[e5];
        if (i5 !== n5) {
          if ("object" != typeof i5 || !i5)
            continue e;
          {
            let e6, t5, o5 = 0;
            for (const l5 in i5) {
              if (n5 === String(i5[l5])) {
                if ("@initial" !== l5) {
                  const e7 = l5.slice(1);
                  (t5 = t5 || []).push(e7 in r4 ? r4[e7] : l5.replace(/^@media ?/, "")), c4 = true;
                }
                a4 += o5, e6 = true;
              }
              ++o5;
            }
            if (t5 && t5.length && (l4 = { ["@media " + t5.join(", ")]: l4 }), !e6)
              continue e;
          }
        }
      }
      (i4[a4] = i4[a4] || []).push([n4 ? "cv" : `${e5}-${o4[e5]}`, l4, c4]);
    }
  return i4;
};
var A = {};
var N = o();
var D = (e4, t4) => N(e4, () => (...r4) => {
  const n4 = () => {
    for (let n5 of r4) {
      n5 = "object" == typeof n5 && n5 || {};
      let r5 = z(n5);
      if (!t4.rules.global.cache.has(r5)) {
        if (t4.rules.global.cache.add(r5), "@import" in n5) {
          let e5 = [].indexOf.call(t4.sheet.cssRules, t4.rules.themed.group) - 1;
          for (let r6 of [].concat(n5["@import"]))
            r6 = r6.includes('"') || r6.includes("'") ? r6 : `"${r6}"`, t4.sheet.insertRule(`@import ${r6};`, e5++);
          delete n5["@import"];
        }
        $(n5, [], [], e4, (e5) => {
          t4.rules.global.apply(e5);
        });
      }
    }
    return "";
  };
  return s(n4, { toString: n4 });
});
var H = o();
var V = (e4, t4) => H(e4, () => (r4) => {
  const n4 = `${S(e4.prefix)}k-${z(r4)}`, i4 = () => {
    if (!t4.rules.global.cache.has(n4)) {
      t4.rules.global.cache.add(n4);
      const i5 = [];
      $(r4, [], [], e4, (e5) => i5.push(e5));
      const o4 = `@keyframes ${n4}{${i5.join("")}}`;
      t4.rules.global.apply(o4);
    }
    return n4;
  };
  return s(i4, { get name() {
    return i4();
  }, toString: i4 });
});
var G = class {
  constructor(e4, t4, r4, n4) {
    this.token = null == e4 ? "" : String(e4), this.value = null == t4 ? "" : String(t4), this.scale = null == r4 ? "" : String(r4), this.prefix = null == n4 ? "" : String(n4);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
};
var F = o();
var J = (e4, t4) => F(e4, () => (r4, n4) => {
  n4 = "object" == typeof r4 && r4 || Object(n4);
  const i4 = `.${r4 = (r4 = "string" == typeof r4 ? r4 : "") || `${S(e4.prefix)}t-${z(n4)}`}`, o4 = {}, l4 = [];
  for (const t5 in n4) {
    o4[t5] = {};
    for (const r5 in n4[t5]) {
      const i5 = `--${S(e4.prefix)}${t5}-${r5}`, s5 = k(String(n4[t5][r5]), e4.prefix, t5);
      o4[t5][r5] = new G(r5, s5, t5, e4.prefix), l4.push(`${i5}:${s5}`);
    }
  }
  const s4 = () => {
    if (l4.length && !t4.rules.themed.cache.has(r4)) {
      t4.rules.themed.cache.add(r4);
      const i5 = `${n4 === e4.theme ? ":root," : ""}.${r4}{${l4.join(";")}}`;
      t4.rules.themed.apply(i5);
    }
    return r4;
  };
  return { ...o4, get className() {
    return s4();
  }, selector: i4, toString: s4 };
});
var U = o();
var Y = o();
var q = (e4) => {
  const t4 = ((e5) => {
    let t5 = false;
    const r4 = U(e5, (e6) => {
      t5 = true;
      const r5 = "prefix" in (e6 = "object" == typeof e6 && e6 || {}) ? String(e6.prefix) : "", i4 = "object" == typeof e6.media && e6.media || {}, o4 = "object" == typeof e6.root ? e6.root || null : globalThis.document || null, l4 = "object" == typeof e6.theme && e6.theme || {}, s4 = { prefix: r5, media: i4, theme: l4, themeMap: "object" == typeof e6.themeMap && e6.themeMap || { ...n }, utils: "object" == typeof e6.utils && e6.utils || {} }, a4 = E(o4), c4 = { css: M(s4, a4), globalCss: D(s4, a4), keyframes: V(s4, a4), createTheme: J(s4, a4), reset() {
        a4.reset(), c4.theme.toString();
      }, theme: {}, sheet: a4, config: s4, prefix: r5, getCssText: a4.toString, toString: a4.toString };
      return String(c4.theme = c4.createTheme(l4)), c4;
    });
    return t5 || r4.reset(), r4;
  })(e4);
  return t4.styled = (({ config: e5, sheet: t5 }) => Y(e5, () => {
    const r4 = M(e5, t5);
    return (...e6) => {
      const t6 = r4(...e6), n4 = t6[l].type, i4 = import_react.default.forwardRef((e7, r5) => {
        const i5 = e7 && e7.as || n4, { props: o4, deferredInjector: l4 } = t6(e7);
        return delete o4.as, o4.ref = r5, l4 ? import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement(i5, o4), import_react.default.createElement(l4, null)) : import_react.default.createElement(i5, o4);
      });
      return i4.className = t6.className, i4.displayName = `Styled.${n4.displayName || n4.name || n4}`, i4.selector = t6.selector, i4.toString = () => t6.selector, i4[l] = t6[l], i4;
    };
  }))(t4), t4;
};

// node_modules/colord/index.mjs
var r2 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
var t2 = function(r4) {
  return "string" == typeof r4 ? r4.length > 0 : "number" == typeof r4;
};
var n2 = function(r4, t4, n4) {
  return void 0 === t4 && (t4 = 0), void 0 === n4 && (n4 = Math.pow(10, t4)), Math.round(n4 * r4) / n4 + 0;
};
var e2 = function(r4, t4, n4) {
  return void 0 === t4 && (t4 = 0), void 0 === n4 && (n4 = 1), r4 > n4 ? n4 : r4 > t4 ? r4 : t4;
};
var u2 = function(r4) {
  return (r4 = isFinite(r4) ? r4 % 360 : 0) > 0 ? r4 : r4 + 360;
};
var a2 = function(r4) {
  return { r: e2(r4.r, 0, 255), g: e2(r4.g, 0, 255), b: e2(r4.b, 0, 255), a: e2(r4.a) };
};
var o2 = function(r4) {
  return { r: n2(r4.r), g: n2(r4.g), b: n2(r4.b), a: n2(r4.a, 3) };
};
var i2 = /^#([0-9a-f]{3,8})$/i;
var s2 = function(r4) {
  var t4 = r4.toString(16);
  return t4.length < 2 ? "0" + t4 : t4;
};
var h2 = function(r4) {
  var t4 = r4.r, n4 = r4.g, e4 = r4.b, u4 = r4.a, a4 = Math.max(t4, n4, e4), o4 = a4 - Math.min(t4, n4, e4), i4 = o4 ? a4 === t4 ? (n4 - e4) / o4 : a4 === n4 ? 2 + (e4 - t4) / o4 : 4 + (t4 - n4) / o4 : 0;
  return { h: 60 * (i4 < 0 ? i4 + 6 : i4), s: a4 ? o4 / a4 * 100 : 0, v: a4 / 255 * 100, a: u4 };
};
var b2 = function(r4) {
  var t4 = r4.h, n4 = r4.s, e4 = r4.v, u4 = r4.a;
  t4 = t4 / 360 * 6, n4 /= 100, e4 /= 100;
  var a4 = Math.floor(t4), o4 = e4 * (1 - n4), i4 = e4 * (1 - (t4 - a4) * n4), s4 = e4 * (1 - (1 - t4 + a4) * n4), h4 = a4 % 6;
  return { r: 255 * [e4, i4, o4, o4, s4, e4][h4], g: 255 * [s4, e4, e4, i4, o4, o4][h4], b: 255 * [o4, o4, s4, e4, e4, i4][h4], a: u4 };
};
var g2 = function(r4) {
  return { h: u2(r4.h), s: e2(r4.s, 0, 100), l: e2(r4.l, 0, 100), a: e2(r4.a) };
};
var d2 = function(r4) {
  return { h: n2(r4.h), s: n2(r4.s), l: n2(r4.l), a: n2(r4.a, 3) };
};
var f2 = function(r4) {
  return b2((n4 = (t4 = r4).s, { h: t4.h, s: (n4 *= ((e4 = t4.l) < 50 ? e4 : 100 - e4) / 100) > 0 ? 2 * n4 / (e4 + n4) * 100 : 0, v: e4 + n4, a: t4.a }));
  var t4, n4, e4;
};
var c2 = function(r4) {
  return { h: (t4 = h2(r4)).h, s: (u4 = (200 - (n4 = t4.s)) * (e4 = t4.v) / 100) > 0 && u4 < 200 ? n4 * e4 / 100 / (u4 <= 100 ? u4 : 200 - u4) * 100 : 0, l: u4 / 2, a: t4.a };
  var t4, n4, e4, u4;
};
var l2 = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var p2 = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var v2 = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var m2 = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var y2 = { string: [[function(r4) {
  var t4 = i2.exec(r4);
  return t4 ? (r4 = t4[1]).length <= 4 ? { r: parseInt(r4[0] + r4[0], 16), g: parseInt(r4[1] + r4[1], 16), b: parseInt(r4[2] + r4[2], 16), a: 4 === r4.length ? n2(parseInt(r4[3] + r4[3], 16) / 255, 2) : 1 } : 6 === r4.length || 8 === r4.length ? { r: parseInt(r4.substr(0, 2), 16), g: parseInt(r4.substr(2, 2), 16), b: parseInt(r4.substr(4, 2), 16), a: 8 === r4.length ? n2(parseInt(r4.substr(6, 2), 16) / 255, 2) : 1 } : null : null;
}, "hex"], [function(r4) {
  var t4 = v2.exec(r4) || m2.exec(r4);
  return t4 ? t4[2] !== t4[4] || t4[4] !== t4[6] ? null : a2({ r: Number(t4[1]) / (t4[2] ? 100 / 255 : 1), g: Number(t4[3]) / (t4[4] ? 100 / 255 : 1), b: Number(t4[5]) / (t4[6] ? 100 / 255 : 1), a: void 0 === t4[7] ? 1 : Number(t4[7]) / (t4[8] ? 100 : 1) }) : null;
}, "rgb"], [function(t4) {
  var n4 = l2.exec(t4) || p2.exec(t4);
  if (!n4)
    return null;
  var e4, u4, a4 = g2({ h: (e4 = n4[1], u4 = n4[2], void 0 === u4 && (u4 = "deg"), Number(e4) * (r2[u4] || 1)), s: Number(n4[3]), l: Number(n4[4]), a: void 0 === n4[5] ? 1 : Number(n4[5]) / (n4[6] ? 100 : 1) });
  return f2(a4);
}, "hsl"]], object: [[function(r4) {
  var n4 = r4.r, e4 = r4.g, u4 = r4.b, o4 = r4.a, i4 = void 0 === o4 ? 1 : o4;
  return t2(n4) && t2(e4) && t2(u4) ? a2({ r: Number(n4), g: Number(e4), b: Number(u4), a: Number(i4) }) : null;
}, "rgb"], [function(r4) {
  var n4 = r4.h, e4 = r4.s, u4 = r4.l, a4 = r4.a, o4 = void 0 === a4 ? 1 : a4;
  if (!t2(n4) || !t2(e4) || !t2(u4))
    return null;
  var i4 = g2({ h: Number(n4), s: Number(e4), l: Number(u4), a: Number(o4) });
  return f2(i4);
}, "hsl"], [function(r4) {
  var n4 = r4.h, a4 = r4.s, o4 = r4.v, i4 = r4.a, s4 = void 0 === i4 ? 1 : i4;
  if (!t2(n4) || !t2(a4) || !t2(o4))
    return null;
  var h4 = function(r5) {
    return { h: u2(r5.h), s: e2(r5.s, 0, 100), v: e2(r5.v, 0, 100), a: e2(r5.a) };
  }({ h: Number(n4), s: Number(a4), v: Number(o4), a: Number(s4) });
  return b2(h4);
}, "hsv"]] };
var N2 = function(r4, t4) {
  for (var n4 = 0; n4 < t4.length; n4++) {
    var e4 = t4[n4][0](r4);
    if (e4)
      return [e4, t4[n4][1]];
  }
  return [null, void 0];
};
var x2 = function(r4) {
  return "string" == typeof r4 ? N2(r4.trim(), y2.string) : "object" == typeof r4 && null !== r4 ? N2(r4, y2.object) : [null, void 0];
};
var I2 = function(r4) {
  return x2(r4)[1];
};
var M2 = function(r4, t4) {
  var n4 = c2(r4);
  return { h: n4.h, s: e2(n4.s + 100 * t4, 0, 100), l: n4.l, a: n4.a };
};
var H2 = function(r4) {
  return (299 * r4.r + 587 * r4.g + 114 * r4.b) / 1e3 / 255;
};
var $2 = function(r4, t4) {
  var n4 = c2(r4);
  return { h: n4.h, s: n4.s, l: e2(n4.l + 100 * t4, 0, 100), a: n4.a };
};
var j2 = function() {
  function r4(r5) {
    this.parsed = x2(r5)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };
  }
  return r4.prototype.isValid = function() {
    return null !== this.parsed;
  }, r4.prototype.brightness = function() {
    return n2(H2(this.rgba), 2);
  }, r4.prototype.isDark = function() {
    return H2(this.rgba) < 0.5;
  }, r4.prototype.isLight = function() {
    return H2(this.rgba) >= 0.5;
  }, r4.prototype.toHex = function() {
    return r5 = o2(this.rgba), t4 = r5.r, e4 = r5.g, u4 = r5.b, i4 = (a4 = r5.a) < 1 ? s2(n2(255 * a4)) : "", "#" + s2(t4) + s2(e4) + s2(u4) + i4;
    var r5, t4, e4, u4, a4, i4;
  }, r4.prototype.toRgb = function() {
    return o2(this.rgba);
  }, r4.prototype.toRgbString = function() {
    return r5 = o2(this.rgba), t4 = r5.r, n4 = r5.g, e4 = r5.b, (u4 = r5.a) < 1 ? "rgba(" + t4 + ", " + n4 + ", " + e4 + ", " + u4 + ")" : "rgb(" + t4 + ", " + n4 + ", " + e4 + ")";
    var r5, t4, n4, e4, u4;
  }, r4.prototype.toHsl = function() {
    return d2(c2(this.rgba));
  }, r4.prototype.toHslString = function() {
    return r5 = d2(c2(this.rgba)), t4 = r5.h, n4 = r5.s, e4 = r5.l, (u4 = r5.a) < 1 ? "hsla(" + t4 + ", " + n4 + "%, " + e4 + "%, " + u4 + ")" : "hsl(" + t4 + ", " + n4 + "%, " + e4 + "%)";
    var r5, t4, n4, e4, u4;
  }, r4.prototype.toHsv = function() {
    return r5 = h2(this.rgba), { h: n2(r5.h), s: n2(r5.s), v: n2(r5.v), a: n2(r5.a, 3) };
    var r5;
  }, r4.prototype.invert = function() {
    return w2({ r: 255 - (r5 = this.rgba).r, g: 255 - r5.g, b: 255 - r5.b, a: r5.a });
    var r5;
  }, r4.prototype.saturate = function(r5) {
    return void 0 === r5 && (r5 = 0.1), w2(M2(this.rgba, r5));
  }, r4.prototype.desaturate = function(r5) {
    return void 0 === r5 && (r5 = 0.1), w2(M2(this.rgba, -r5));
  }, r4.prototype.grayscale = function() {
    return w2(M2(this.rgba, -1));
  }, r4.prototype.lighten = function(r5) {
    return void 0 === r5 && (r5 = 0.1), w2($2(this.rgba, r5));
  }, r4.prototype.darken = function(r5) {
    return void 0 === r5 && (r5 = 0.1), w2($2(this.rgba, -r5));
  }, r4.prototype.rotate = function(r5) {
    return void 0 === r5 && (r5 = 15), this.hue(this.hue() + r5);
  }, r4.prototype.alpha = function(r5) {
    return "number" == typeof r5 ? w2({ r: (t4 = this.rgba).r, g: t4.g, b: t4.b, a: r5 }) : n2(this.rgba.a, 3);
    var t4;
  }, r4.prototype.hue = function(r5) {
    var t4 = c2(this.rgba);
    return "number" == typeof r5 ? w2({ h: r5, s: t4.s, l: t4.l, a: t4.a }) : n2(t4.h);
  }, r4.prototype.isEqual = function(r5) {
    return this.toHex() === w2(r5).toHex();
  }, r4;
}();
var w2 = function(r4) {
  return r4 instanceof j2 ? r4 : new j2(r4);
};
var S2 = [];
var k2 = function(r4) {
  r4.forEach(function(r5) {
    S2.indexOf(r5) < 0 && (r5(j2, y2), S2.push(r5));
  });
};

// node_modules/colord/plugins/names.mjs
function names_default(e4, f4) {
  var a4 = { white: "#ffffff", bisque: "#ffe4c4", blue: "#0000ff", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", antiquewhite: "#faebd7", aqua: "#00ffff", azure: "#f0ffff", whitesmoke: "#f5f5f5", papayawhip: "#ffefd5", plum: "#dda0dd", blanchedalmond: "#ffebcd", black: "#000000", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", cornsilk: "#fff8dc", cornflowerblue: "#6495ed", burlywood: "#deb887", aquamarine: "#7fffd4", beige: "#f5f5dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkkhaki: "#bdb76b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", peachpuff: "#ffdab9", darkmagenta: "#8b008b", darkred: "#8b0000", darkorchid: "#9932cc", darkorange: "#ff8c00", darkslateblue: "#483d8b", gray: "#808080", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", deeppink: "#ff1493", deepskyblue: "#00bfff", wheat: "#f5deb3", firebrick: "#b22222", floralwhite: "#fffaf0", ghostwhite: "#f8f8ff", darkviolet: "#9400d3", magenta: "#ff00ff", green: "#008000", dodgerblue: "#1e90ff", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", blueviolet: "#8a2be2", forestgreen: "#228b22", lawngreen: "#7cfc00", indianred: "#cd5c5c", indigo: "#4b0082", fuchsia: "#ff00ff", brown: "#a52a2a", maroon: "#800000", mediumblue: "#0000cd", lightcoral: "#f08080", darkturquoise: "#00ced1", lightcyan: "#e0ffff", ivory: "#fffff0", lightyellow: "#ffffe0", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", linen: "#faf0e6", mediumaquamarine: "#66cdaa", lemonchiffon: "#fffacd", lime: "#00ff00", khaki: "#f0e68c", mediumseagreen: "#3cb371", limegreen: "#32cd32", mediumspringgreen: "#00fa9a", lightskyblue: "#87cefa", lightblue: "#add8e6", midnightblue: "#191970", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", mintcream: "#f5fffa", lightslategray: "#778899", lightslategrey: "#778899", navajowhite: "#ffdead", navy: "#000080", mediumvioletred: "#c71585", powderblue: "#b0e0e6", palegoldenrod: "#eee8aa", oldlace: "#fdf5e6", paleturquoise: "#afeeee", mediumturquoise: "#48d1cc", mediumorchid: "#ba55d3", rebeccapurple: "#663399", lightsteelblue: "#b0c4de", mediumslateblue: "#7b68ee", thistle: "#d8bfd8", tan: "#d2b48c", orchid: "#da70d6", mediumpurple: "#9370db", purple: "#800080", pink: "#ffc0cb", skyblue: "#87ceeb", springgreen: "#00ff7f", palegreen: "#98fb98", red: "#ff0000", yellow: "#ffff00", slateblue: "#6a5acd", lavenderblush: "#fff0f5", peru: "#cd853f", palevioletred: "#db7093", violet: "#ee82ee", teal: "#008080", slategray: "#708090", slategrey: "#708090", aliceblue: "#f0f8ff", darkseagreen: "#8fbc8f", darkolivegreen: "#556b2f", greenyellow: "#adff2f", seagreen: "#2e8b57", seashell: "#fff5ee", tomato: "#ff6347", silver: "#c0c0c0", sienna: "#a0522d", lavender: "#e6e6fa", lightgreen: "#90ee90", orange: "#ffa500", orangered: "#ff4500", steelblue: "#4682b4", royalblue: "#4169e1", turquoise: "#40e0d0", yellowgreen: "#9acd32", salmon: "#fa8072", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", darksalmon: "#e9967a", lightgoldenrodyellow: "#fafad2", snow: "#fffafa", lightgrey: "#d3d3d3", lightgray: "#d3d3d3", dimgray: "#696969", dimgrey: "#696969", olivedrab: "#6b8e23", olive: "#808000" }, r4 = {};
  for (var d4 in a4)
    r4[a4[d4]] = d4;
  var l4 = {};
  e4.prototype.toName = function(f5) {
    if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b))
      return "transparent";
    var d5, i4, n4 = r4[this.toHex()];
    if (n4)
      return n4;
    if (null == f5 ? void 0 : f5.closest) {
      var o4 = this.toRgb(), t4 = 1 / 0, b4 = "black";
      if (!l4.length)
        for (var c4 in a4)
          l4[c4] = new e4(a4[c4]).toRgb();
      for (var g4 in a4) {
        var u4 = (d5 = o4, i4 = l4[g4], Math.pow(d5.r - i4.r, 2) + Math.pow(d5.g - i4.g, 2) + Math.pow(d5.b - i4.b, 2));
        u4 < t4 && (t4 = u4, b4 = g4);
      }
      return b4;
    }
  };
  f4.string.push([function(f5) {
    var r5 = f5.toLowerCase(), d5 = "transparent" === r5 ? "#0000" : a4[r5];
    return d5 ? new e4(d5).toRgb() : null;
  }, "name"]);
}

// node_modules/react-colorful/dist/index.mjs
var import_react2 = __toESM(require_react(), 1);
function u3() {
  return (u3 = Object.assign || function(e4) {
    for (var r4 = 1; r4 < arguments.length; r4++) {
      var t4 = arguments[r4];
      for (var n4 in t4)
        Object.prototype.hasOwnProperty.call(t4, n4) && (e4[n4] = t4[n4]);
    }
    return e4;
  }).apply(this, arguments);
}
function c3(e4, r4) {
  if (null == e4)
    return {};
  var t4, n4, o4 = {}, a4 = Object.keys(e4);
  for (n4 = 0; n4 < a4.length; n4++)
    r4.indexOf(t4 = a4[n4]) >= 0 || (o4[t4] = e4[t4]);
  return o4;
}
function i3(e4) {
  var t4 = (0, import_react2.useRef)(e4), n4 = (0, import_react2.useRef)(function(e5) {
    t4.current && t4.current(e5);
  });
  return t4.current = e4, n4.current;
}
var s3 = function(e4, r4, t4) {
  return void 0 === r4 && (r4 = 0), void 0 === t4 && (t4 = 1), e4 > t4 ? t4 : e4 < r4 ? r4 : e4;
};
var f3 = function(e4) {
  return "touches" in e4;
};
var v3 = function(e4) {
  return e4 && e4.ownerDocument.defaultView || self;
};
var d3 = function(e4, r4, t4) {
  var n4 = e4.getBoundingClientRect(), o4 = f3(r4) ? function(e5, r5) {
    for (var t5 = 0; t5 < e5.length; t5++)
      if (e5[t5].identifier === r5)
        return e5[t5];
    return e5[0];
  }(r4.touches, t4) : r4;
  return { left: s3((o4.pageX - (n4.left + v3(e4).pageXOffset)) / n4.width), top: s3((o4.pageY - (n4.top + v3(e4).pageYOffset)) / n4.height) };
};
var h3 = function(e4) {
  !f3(e4) && e4.preventDefault();
};
var m3 = import_react2.default.memo(function(o4) {
  var a4 = o4.onMove, l4 = o4.onKey, s4 = c3(o4, ["onMove", "onKey"]), m4 = (0, import_react2.useRef)(null), g4 = i3(a4), p4 = i3(l4), b4 = (0, import_react2.useRef)(null), _2 = (0, import_react2.useRef)(false), x3 = (0, import_react2.useMemo)(function() {
    var e4 = function(e5) {
      h3(e5), (f3(e5) ? e5.touches.length > 0 : e5.buttons > 0) && m4.current ? g4(d3(m4.current, e5, b4.current)) : t4(false);
    }, r4 = function() {
      return t4(false);
    };
    function t4(t5) {
      var n4 = _2.current, o5 = v3(m4.current), a5 = t5 ? o5.addEventListener : o5.removeEventListener;
      a5(n4 ? "touchmove" : "mousemove", e4), a5(n4 ? "touchend" : "mouseup", r4);
    }
    return [function(e5) {
      var r5 = e5.nativeEvent, n4 = m4.current;
      if (n4 && (h3(r5), !function(e6, r6) {
        return r6 && !f3(e6);
      }(r5, _2.current) && n4)) {
        if (f3(r5)) {
          _2.current = true;
          var o5 = r5.changedTouches || [];
          o5.length && (b4.current = o5[0].identifier);
        }
        n4.focus(), g4(d3(n4, r5, b4.current)), t4(true);
      }
    }, function(e5) {
      var r5 = e5.which || e5.keyCode;
      r5 < 37 || r5 > 40 || (e5.preventDefault(), p4({ left: 39 === r5 ? 0.05 : 37 === r5 ? -0.05 : 0, top: 40 === r5 ? 0.05 : 38 === r5 ? -0.05 : 0 }));
    }, t4];
  }, [p4, g4]), C2 = x3[0], E2 = x3[1], H3 = x3[2];
  return (0, import_react2.useEffect)(function() {
    return H3;
  }, [H3]), import_react2.default.createElement("div", u3({}, s4, { onTouchStart: C2, onMouseDown: C2, className: "react-colorful__interactive", ref: m4, onKeyDown: E2, tabIndex: 0, role: "slider" }));
});
var g3 = function(e4) {
  return e4.filter(Boolean).join(" ");
};
var p3 = function(r4) {
  var t4 = r4.color, n4 = r4.left, o4 = r4.top, a4 = void 0 === o4 ? 0.5 : o4, l4 = g3(["react-colorful__pointer", r4.className]);
  return import_react2.default.createElement("div", { className: l4, style: { top: 100 * a4 + "%", left: 100 * n4 + "%" } }, import_react2.default.createElement("div", { className: "react-colorful__pointer-fill", style: { backgroundColor: t4 } }));
};
var b3 = function(e4, r4, t4) {
  return void 0 === r4 && (r4 = 0), void 0 === t4 && (t4 = Math.pow(10, r4)), Math.round(t4 * e4) / t4;
};
var _ = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
var y3 = function(e4) {
  var r4 = e4.s, t4 = e4.v, n4 = e4.a, o4 = (200 - r4) * t4 / 100;
  return { h: b3(e4.h), s: b3(o4 > 0 && o4 < 200 ? r4 * t4 / 100 / (o4 <= 100 ? o4 : 200 - o4) * 100 : 0), l: b3(o4 / 2), a: b3(n4, 2) };
};
var q2 = function(e4) {
  var r4 = y3(e4);
  return "hsl(" + r4.h + ", " + r4.s + "%, " + r4.l + "%)";
};
var k3 = function(e4) {
  var r4 = y3(e4);
  return "hsla(" + r4.h + ", " + r4.s + "%, " + r4.l + "%, " + r4.a + ")";
};
var I3 = function(e4) {
  var r4 = e4.h, t4 = e4.s, n4 = e4.v, o4 = e4.a;
  r4 = r4 / 360 * 6, t4 /= 100, n4 /= 100;
  var a4 = Math.floor(r4), l4 = n4 * (1 - t4), u4 = n4 * (1 - (r4 - a4) * t4), c4 = n4 * (1 - (1 - r4 + a4) * t4), i4 = a4 % 6;
  return { r: b3(255 * [n4, u4, l4, l4, c4, n4][i4]), g: b3(255 * [c4, n4, n4, u4, l4, l4][i4]), b: b3(255 * [l4, l4, c4, n4, n4, u4][i4]), a: b3(o4, 2) };
};
var L2 = function(e4) {
  var r4 = e4.r, t4 = e4.g, n4 = e4.b, o4 = e4.a, a4 = Math.max(r4, t4, n4), l4 = a4 - Math.min(r4, t4, n4), u4 = l4 ? a4 === r4 ? (t4 - n4) / l4 : a4 === t4 ? 2 + (n4 - r4) / l4 : 4 + (r4 - t4) / l4 : 0;
  return { h: b3(60 * (u4 < 0 ? u4 + 6 : u4)), s: b3(a4 ? l4 / a4 * 100 : 0), v: b3(a4 / 255 * 100), a: o4 };
};
var S3 = import_react2.default.memo(function(r4) {
  var t4 = r4.hue, n4 = r4.onChange, o4 = g3(["react-colorful__hue", r4.className]);
  return import_react2.default.createElement("div", { className: o4 }, import_react2.default.createElement(m3, { onMove: function(e4) {
    n4({ h: 360 * e4.left });
  }, onKey: function(e4) {
    n4({ h: s3(t4 + 360 * e4.left, 0, 360) });
  }, "aria-label": "Hue", "aria-valuenow": b3(t4), "aria-valuemax": "360", "aria-valuemin": "0" }, import_react2.default.createElement(p3, { className: "react-colorful__hue-pointer", left: t4 / 360, color: q2({ h: t4, s: 100, v: 100, a: 1 }) })));
});
var T2 = import_react2.default.memo(function(r4) {
  var t4 = r4.hsva, n4 = r4.onChange, o4 = { backgroundColor: q2({ h: t4.h, s: 100, v: 100, a: 1 }) };
  return import_react2.default.createElement("div", { className: "react-colorful__saturation", style: o4 }, import_react2.default.createElement(m3, { onMove: function(e4) {
    n4({ s: 100 * e4.left, v: 100 - 100 * e4.top });
  }, onKey: function(e4) {
    n4({ s: s3(t4.s + 100 * e4.left, 0, 100), v: s3(t4.v - 100 * e4.top, 0, 100) });
  }, "aria-label": "Color", "aria-valuetext": "Saturation " + b3(t4.s) + "%, Brightness " + b3(t4.v) + "%" }, import_react2.default.createElement(p3, { className: "react-colorful__saturation-pointer", top: 1 - t4.v / 100, left: t4.s / 100, color: q2(t4) })));
});
var F2 = function(e4, r4) {
  if (e4 === r4)
    return true;
  for (var t4 in e4)
    if (e4[t4] !== r4[t4])
      return false;
  return true;
};
function Y2(e4, t4, l4) {
  var u4 = i3(l4), c4 = (0, import_react2.useState)(function() {
    return e4.toHsva(t4);
  }), s4 = c4[0], f4 = c4[1], v4 = (0, import_react2.useRef)({ color: t4, hsva: s4 });
  (0, import_react2.useEffect)(function() {
    if (!e4.equal(t4, v4.current.color)) {
      var r4 = e4.toHsva(t4);
      v4.current = { hsva: r4, color: t4 }, f4(r4);
    }
  }, [t4, e4]), (0, import_react2.useEffect)(function() {
    var r4;
    F2(s4, v4.current.hsva) || e4.equal(r4 = e4.fromHsva(s4), v4.current.color) || (v4.current = { hsva: s4, color: r4 }, u4(r4));
  }, [s4, e4, u4]);
  var d4 = (0, import_react2.useCallback)(function(e5) {
    f4(function(r4) {
      return Object.assign({}, r4, e5);
    });
  }, []);
  return [s4, d4];
}
var R2;
var V2 = "undefined" != typeof window ? import_react2.useLayoutEffect : import_react2.useEffect;
var $3 = function() {
  return R2 || ("undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : void 0);
};
var J2 = /* @__PURE__ */ new Map();
var Q = function(e4) {
  V2(function() {
    var r4 = e4.current ? e4.current.ownerDocument : document;
    if (void 0 !== r4 && !J2.has(r4)) {
      var t4 = r4.createElement("style");
      t4.innerHTML = `.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}`, J2.set(r4, t4);
      var n4 = $3();
      n4 && t4.setAttribute("nonce", n4), r4.head.appendChild(t4);
    }
  }, []);
};
var U2 = function(t4) {
  var n4 = t4.className, o4 = t4.colorModel, a4 = t4.color, l4 = void 0 === a4 ? o4.defaultColor : a4, i4 = t4.onChange, s4 = c3(t4, ["className", "colorModel", "color", "onChange"]), f4 = (0, import_react2.useRef)(null);
  Q(f4);
  var v4 = Y2(o4, l4, i4), d4 = v4[0], h4 = v4[1], m4 = g3(["react-colorful", n4]);
  return import_react2.default.createElement("div", u3({}, s4, { ref: f4, className: m4 }), import_react2.default.createElement(T2, { hsva: d4, onChange: h4 }), import_react2.default.createElement(S3, { hue: d4.h, onChange: h4, className: "react-colorful__last-control" }));
};
var ee = function(r4) {
  var t4 = r4.className, n4 = r4.hsva, o4 = r4.onChange, a4 = { backgroundImage: "linear-gradient(90deg, " + k3(Object.assign({}, n4, { a: 0 })) + ", " + k3(Object.assign({}, n4, { a: 1 })) + ")" }, l4 = g3(["react-colorful__alpha", t4]), u4 = b3(100 * n4.a);
  return import_react2.default.createElement("div", { className: l4 }, import_react2.default.createElement("div", { className: "react-colorful__alpha-gradient", style: a4 }), import_react2.default.createElement(m3, { onMove: function(e4) {
    o4({ a: e4.left });
  }, onKey: function(e4) {
    o4({ a: s3(n4.a + e4.left) });
  }, "aria-label": "Alpha", "aria-valuetext": u4 + "%", "aria-valuenow": u4, "aria-valuemin": "0", "aria-valuemax": "100" }, import_react2.default.createElement(p3, { className: "react-colorful__alpha-pointer", left: n4.a, color: k3(n4) })));
};
var re = function(t4) {
  var n4 = t4.className, o4 = t4.colorModel, a4 = t4.color, l4 = void 0 === a4 ? o4.defaultColor : a4, i4 = t4.onChange, s4 = c3(t4, ["className", "colorModel", "color", "onChange"]), f4 = (0, import_react2.useRef)(null);
  Q(f4);
  var v4 = Y2(o4, l4, i4), d4 = v4[0], h4 = v4[1], m4 = g3(["react-colorful", n4]);
  return import_react2.default.createElement("div", u3({}, s4, { ref: f4, className: m4 }), import_react2.default.createElement(T2, { hsva: d4, onChange: h4 }), import_react2.default.createElement(S3, { hue: d4.h, onChange: h4 }), import_react2.default.createElement(ee, { hsva: d4, onChange: h4, className: "react-colorful__last-control" }));
};
var xe = { defaultColor: { r: 0, g: 0, b: 0, a: 1 }, toHsva: L2, fromHsva: I3, equal: F2 };
var Ce = function(r4) {
  return import_react2.default.createElement(re, u3({}, r4, { colorModel: xe }));
};
var Me = { defaultColor: { r: 0, g: 0, b: 0 }, toHsva: function(e4) {
  return L2({ r: e4.r, g: e4.g, b: e4.b, a: 1 });
}, fromHsva: function(e4) {
  return { r: (r4 = I3(e4)).r, g: r4.g, b: r4.b };
  var r4;
}, equal: F2 };
var Ne = function(r4) {
  return import_react2.default.createElement(U2, u3({}, r4, { colorModel: Me }));
};

// node_modules/react-dropzone/dist/es/index.js
var import_react3 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/tslib/tslib.es6.js
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e4) {
        reject(e4);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e4) {
        reject(e4);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t4[0] & 1)
      throw t4[1];
    return t4[1];
  }, trys: [], ops: [] }, f4, y4, t4, g4;
  return g4 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g4[Symbol.iterator] = function() {
    return this;
  }), g4;
  function verb(n4) {
    return function(v4) {
      return step([n4, v4]);
    };
  }
  function step(op) {
    if (f4)
      throw new TypeError("Generator is already executing.");
    while (g4 && (g4 = 0, op[0] && (_2 = 0)), _2)
      try {
        if (f4 = 1, y4 && (t4 = op[0] & 2 ? y4["return"] : op[0] ? y4["throw"] || ((t4 = y4["return"]) && t4.call(y4), 0) : y4.next) && !(t4 = t4.call(y4, op[1])).done)
          return t4;
        if (y4 = 0, t4)
          op = [op[0] & 2, t4.value];
        switch (op[0]) {
          case 0:
          case 1:
            t4 = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y4 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t4 = _2.trys, t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t4[1]) {
              _2.label = t4[1];
              t4 = op;
              break;
            }
            if (t4 && _2.label < t4[2]) {
              _2.label = t4[2];
              _2.ops.push(op);
              break;
            }
            if (t4[2])
              _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body.call(thisArg, _2);
      } catch (e4) {
        op = [6, e4];
        y4 = 0;
      } finally {
        f4 = t4 = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __read(o4, n4) {
  var m4 = typeof Symbol === "function" && o4[Symbol.iterator];
  if (!m4)
    return o4;
  var i4 = m4.call(o4), r4, ar = [], e4;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r4 = i4.next()).done)
      ar.push(r4.value);
  } catch (error) {
    e4 = { error };
  } finally {
    try {
      if (r4 && !r4.done && (m4 = i4["return"]))
        m4.call(i4);
    } finally {
      if (e4)
        throw e4.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i4 = 0; i4 < arguments.length; i4++)
    ar = ar.concat(__read(arguments[i4]));
  return ar;
}

// node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath(file, path) {
  var f4 = withMimeType(file);
  if (typeof f4.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f4, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f4;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      if (isObject(evt) && isDataTransfer(evt)) {
        return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value) {
  return isObject(value.dataTransfer);
}
function isChangeEvt(value) {
  return isObject(value) && isObject(value.target);
}
function isObject(v4) {
  return typeof v4 === "object" && v4 !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map(function(file) {
    return toFileWithPath(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function() {
    var files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h4) {
            return h4.getFile();
          }))];
        case 1:
          files = _a.sent();
          return [2, files.map(function(file) {
            return toFileWithPath(file);
          })];
      }
    });
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (dt === null) {
            return [2, []];
          }
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i4 = 0; i4 < items.length; i4++) {
    var file = items[i4];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_es());
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i4) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i4) || _unsupportedIterableToArray(arr, i4) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o4, minLen) {
  if (!o4)
    return;
  if (typeof o4 === "string")
    return _arrayLikeToArray(o4, minLen);
  var n4 = Object.prototype.toString.call(o4).slice(8, -1);
  if (n4 === "Object" && o4.constructor)
    n4 = o4.constructor.name;
  if (n4 === "Map" || n4 === "Set")
    return Array.from(o4);
  if (n4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4))
    return _arrayLikeToArray(o4, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var FILE_INVALID_TYPE = "file-invalid-type";
var FILE_TOO_LARGE = "file-too-large";
var FILE_TOO_SMALL = "file-too-small";
var TOO_MANY_FILES = "too-many-files";
var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: "Too many files"
};
function fileAccepted(file, accept) {
  var isAcceptable = file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize)
        return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize)
        return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize)
      return [false, getTooSmallRejectionErr(minSize)];
    else if (isDefined(maxSize) && file.size > maxSize)
      return [false, getTooLargeRejectionErr(maxSize)];
  }
  return [true, null];
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function allFilesAccepted(_ref) {
  var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles;
  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }
  return files.every(function(file) {
    var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray(_fileAccepted, 1), accepted = _fileAccepted2[0];
    var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
    return accepted && sizeMatch;
  });
}
function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === "function") {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== "undefined") {
    return event.cancelBubble;
  }
  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  }
  return Array.prototype.some.call(event.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(event) {
  event.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn) {
      if (!isPropagationStopped(event) && fn) {
        fn.apply(void 0, [event].concat(args));
      }
      return isPropagationStopped(event);
    });
  };
}
function canUseFileSystemAccessAPI() {
  return "showOpenFilePicker" in window;
}
function filePickerOptionsTypes(accept) {
  accept = typeof accept === "string" ? accept.split(",") : accept;
  return [{
    description: "everything",
    // TODO: Need to handle filtering more elegantly than this!
    accept: Array.isArray(accept) ? (
      // Accept just MIME types as per spec
      // NOTE: accept can be https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers
      accept.filter(function(item) {
        return item === "audio/*" || item === "video/*" || item === "image/*" || item === "text/*" || /\w+\/[-+.\w]+/g.test(item);
      }).reduce(function(a4, b4) {
        return _objectSpread(_objectSpread({}, a4), {}, _defineProperty({}, b4, []));
      }, {})
    ) : {}
  }];
}
function isAbort(v4) {
  return v4 instanceof DOMException && (v4.name === "AbortError" || v4.code === v4.ABORT_ERR);
}
function isSecurityError(v4) {
  return v4 instanceof DOMException && (v4.name === "SecurityError" || v4.code === v4.SECURITY_ERR);
}

// node_modules/react-dropzone/dist/es/index.js
var _excluded = ["children"];
var _excluded2 = ["open"];
var _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"];
var _excluded4 = ["refKey", "onChange", "onClick"];
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _slicedToArray2(arr, i4) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i4) || _unsupportedIterableToArray2(arr, i4) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o4, minLen) {
  if (!o4)
    return;
  if (typeof o4 === "string")
    return _arrayLikeToArray2(o4, minLen);
  var n4 = Object.prototype.toString.call(o4).slice(8, -1);
  if (n4 === "Object" && o4.constructor)
    n4 = o4.constructor.name;
  if (n4 === "Map" || n4 === "Set")
    return Array.from(o4);
  if (n4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4))
    return _arrayLikeToArray2(o4, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i4 = 0, arr2 = new Array(len); i4 < len; i4++) {
    arr2[i4] = arr[i4];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i4) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i4 && _arr.length === i4)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i4 = 1; i4 < arguments.length; i4++) {
    var source = null != arguments[i4] ? arguments[i4] : {};
    i4 % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i4;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i4 = 0; i4 < sourceSymbolKeys.length; i4++) {
      key = sourceSymbolKeys[i4];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i4;
  for (i4 = 0; i4 < sourceKeys.length; i4++) {
    key = sourceKeys[i4];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Dropzone = (0, import_react3.forwardRef)(function(_ref, ref) {
  var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
  var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties(_useDropzone, _excluded2);
  (0, import_react3.useImperativeHandle)(ref, function() {
    return {
      open
    };
  }, [open]);
  return import_react3.default.createElement(import_react3.Fragment, null, children(_objectSpread2(_objectSpread2({}, props), {}, {
    open
  })));
});
Dropzone.displayName = "Dropzone";
var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false,
  validator: null,
  useFsAccessApi: true
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.draggedFiles Files in active drag
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: import_prop_types.default.func,
  /**
   * Set accepted file types.
   * See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: import_prop_types.default.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: import_prop_types.default.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: import_prop_types.default.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: import_prop_types.default.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: import_prop_types.default.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: import_prop_types.default.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: import_prop_types.default.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: import_prop_types.default.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: import_prop_types.default.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: import_prop_types.default.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: import_prop_types.default.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: import_prop_types.default.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: import_prop_types.default.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: import_prop_types.default.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: import_prop_types.default.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: import_prop_types.default.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: import_prop_types.default.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: import_prop_types.default.func,
  /**
   * Custom validation function
   * @param {File} file
   * @returns {FileError|FileError[]}
   */
  validator: import_prop_types.default.func
};
var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
function useDropzone() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _defaultProps$options = _objectSpread2(_objectSpread2({}, defaultProps), options), accept = _defaultProps$options.accept, disabled = _defaultProps$options.disabled, getFilesFromEvent = _defaultProps$options.getFilesFromEvent, maxSize = _defaultProps$options.maxSize, minSize = _defaultProps$options.minSize, multiple = _defaultProps$options.multiple, maxFiles = _defaultProps$options.maxFiles, onDragEnter = _defaultProps$options.onDragEnter, onDragLeave = _defaultProps$options.onDragLeave, onDragOver = _defaultProps$options.onDragOver, onDrop = _defaultProps$options.onDrop, onDropAccepted = _defaultProps$options.onDropAccepted, onDropRejected = _defaultProps$options.onDropRejected, onFileDialogCancel = _defaultProps$options.onFileDialogCancel, onFileDialogOpen = _defaultProps$options.onFileDialogOpen, useFsAccessApi = _defaultProps$options.useFsAccessApi, preventDropOnDocument = _defaultProps$options.preventDropOnDocument, noClick = _defaultProps$options.noClick, noKeyboard = _defaultProps$options.noKeyboard, noDrag = _defaultProps$options.noDrag, noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling, validator = _defaultProps$options.validator;
  var onFileDialogOpenCb = (0, import_react3.useMemo)(function() {
    return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop;
  }, [onFileDialogOpen]);
  var onFileDialogCancelCb = (0, import_react3.useMemo)(function() {
    return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop;
  }, [onFileDialogCancel]);
  var rootRef = (0, import_react3.useRef)(null);
  var inputRef = (0, import_react3.useRef)(null);
  var _useReducer = (0, import_react3.useReducer)(reducer, initialState), _useReducer2 = _slicedToArray2(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
  var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive, draggedFiles = state.draggedFiles;
  var fsAccessApiWorksRef = (0, import_react3.useRef)(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
  var onWindowFocus = function onWindowFocus2() {
    if (!fsAccessApiWorksRef.current && isFileDialogActive) {
      setTimeout(function() {
        if (inputRef.current) {
          var files = inputRef.current.files;
          if (!files.length) {
            dispatch({
              type: "closeDialog"
            });
            onFileDialogCancelCb();
          }
        }
      }, 300);
    }
  };
  (0, import_react3.useEffect)(function() {
    window.addEventListener("focus", onWindowFocus, false);
    return function() {
      window.removeEventListener("focus", onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
  var dragTargetsRef = (0, import_react3.useRef)([]);
  var onDocumentDrop = function onDocumentDrop2(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      return;
    }
    event.preventDefault();
    dragTargetsRef.current = [];
  };
  (0, import_react3.useEffect)(function() {
    if (preventDropOnDocument) {
      document.addEventListener("dragover", onDocumentDragOver, false);
      document.addEventListener("drop", onDocumentDrop, false);
    }
    return function() {
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  var onDragEnterCb = (0, import_react3.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(draggedFiles2) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        dispatch({
          draggedFiles: draggedFiles2,
          isDragActive: true,
          type: "setDraggedFiles"
        });
        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
  var onDragOverCb = (0, import_react3.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var hasFiles = isEvtWithFiles(event);
    if (hasFiles && event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = "copy";
      } catch (_unused) {
      }
    }
    if (hasFiles && onDragOver) {
      onDragOver(event);
    }
    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = (0, import_react3.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    var targets = dragTargetsRef.current.filter(function(target) {
      return rootRef.current && rootRef.current.contains(target);
    });
    var targetIdx = targets.indexOf(event.target);
    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }
    dragTargetsRef.current = targets;
    if (targets.length > 0) {
      return;
    }
    dispatch({
      isDragActive: false,
      type: "setDraggedFiles",
      draggedFiles: []
    });
    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var setFiles = (0, import_react3.useCallback)(function(files, event) {
    var acceptedFiles = [];
    var fileRejections = [];
    files.forEach(function(file) {
      var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray2(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
      var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray2(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
      var customErrors = validator ? validator(file) : null;
      if (accepted && sizeMatch && !customErrors) {
        acceptedFiles.push(file);
      } else {
        var errors = [acceptError, sizeError];
        if (customErrors) {
          errors = errors.concat(customErrors);
        }
        fileRejections.push({
          file,
          errors: errors.filter(function(e4) {
            return e4;
          })
        });
      }
    });
    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
      acceptedFiles.forEach(function(file) {
        fileRejections.push({
          file,
          errors: [TOO_MANY_FILES_REJECTION]
        });
      });
      acceptedFiles.splice(0);
    }
    dispatch({
      acceptedFiles,
      fileRejections,
      type: "setFiles"
    });
    if (onDrop) {
      onDrop(acceptedFiles, fileRejections, event);
    }
    if (fileRejections.length > 0 && onDropRejected) {
      onDropRejected(fileRejections, event);
    }
    if (acceptedFiles.length > 0 && onDropAccepted) {
      onDropAccepted(acceptedFiles, event);
    }
  }, [dispatch, multiple, accept, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
  var onDropCb = (0, import_react3.useCallback)(function(event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];
    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function(files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }
        setFiles(files, event);
      });
    }
    dispatch({
      type: "reset"
    });
  }, [getFilesFromEvent, setFiles, noDragEventsBubbling]);
  var openFileDialog = (0, import_react3.useCallback)(function() {
    if (fsAccessApiWorksRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      var opts = {
        multiple,
        types: filePickerOptionsTypes(accept)
      };
      window.showOpenFilePicker(opts).then(function(handles) {
        return getFilesFromEvent(handles);
      }).then(function(files) {
        setFiles(files, null);
        dispatch({
          type: "closeDialog"
        });
      }).catch(function(e4) {
        if (isAbort(e4)) {
          onFileDialogCancelCb(e4);
          dispatch({
            type: "closeDialog"
          });
        } else if (isSecurityError(e4)) {
          fsAccessApiWorksRef.current = false;
          if (inputRef.current) {
            inputRef.current.value = null;
            inputRef.current.click();
          }
        }
      });
      return;
    }
    if (inputRef.current) {
      dispatch({
        type: "openDialog"
      });
      onFileDialogOpenCb();
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, accept, multiple]);
  var onKeyDownCb = (0, import_react3.useCallback)(function(event) {
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }
    if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, openFileDialog]);
  var onFocusCb = (0, import_react3.useCallback)(function() {
    dispatch({
      type: "focus"
    });
  }, []);
  var onBlurCb = (0, import_react3.useCallback)(function() {
    dispatch({
      type: "blur"
    });
  }, []);
  var onClickCb = (0, import_react3.useCallback)(function() {
    if (noClick) {
      return;
    }
    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [noClick, openFileDialog]);
  var composeHandler = function composeHandler2(fn) {
    return disabled ? null : fn;
  };
  var composeKeyboardHandler = function composeKeyboardHandler2(fn) {
    return noKeyboard ? null : composeHandler(fn);
  };
  var composeDragHandler = function composeDragHandler2(fn) {
    return noDrag ? null : composeHandler(fn);
  };
  var stopPropagation = function stopPropagation2(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };
  var getRootProps = (0, import_react3.useMemo)(function() {
    return function() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
      return _objectSpread2(_objectSpread2(_defineProperty2({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
        role: typeof role === "string" && role !== "" ? role : "button"
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = (0, import_react3.useCallback)(function(event) {
    event.stopPropagation();
  }, []);
  var getInputProps = (0, import_react3.useMemo)(function() {
    return function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
      var inputProps = _defineProperty2({
        accept,
        multiple,
        type: "file",
        style: {
          display: "none"
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        tabIndex: -1
      }, refKey, inputRef);
      return _objectSpread2(_objectSpread2({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  var fileCount = draggedFiles.length;
  var isDragAccept = fileCount > 0 && allFilesAccepted({
    files: draggedFiles,
    accept,
    minSize,
    maxSize,
    multiple,
    maxFiles
  });
  var isDragReject = fileCount > 0 && !isDragAccept;
  return _objectSpread2(_objectSpread2({}, state), {}, {
    isDragAccept,
    isDragReject,
    isFocused: isFocused && !disabled,
    getRootProps,
    getInputProps,
    rootRef,
    inputRef,
    open: composeHandler(openFileDialog)
  });
}
function reducer(state, action) {
  switch (action.type) {
    case "focus":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: true
      });
    case "blur":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFocused: false
      });
    case "openDialog":
      return _objectSpread2(_objectSpread2({}, initialState), {}, {
        isFileDialogActive: true
      });
    case "closeDialog":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        isFileDialogActive: false
      });
    case "setDraggedFiles":
      var isDragActive = action.isDragActive, draggedFiles = action.draggedFiles;
      return _objectSpread2(_objectSpread2({}, state), {}, {
        draggedFiles,
        isDragActive
      });
    case "setFiles":
      return _objectSpread2(_objectSpread2({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });
    case "reset":
      return _objectSpread2({}, initialState);
    default:
      return state;
  }
}
function noop() {
}

export {
  dequal,
  v8n_esm_default,
  q,
  I2 as I,
  w2 as w,
  k2 as k,
  names_default,
  Ce,
  Ne,
  useDropzone,
  require_merge_value
};
/*! Bundled license information:

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-extendable/index.js:
  (*!
   * is-extendable <https://github.com/jonschlinkert/is-extendable>
   *
   * Copyright (c) 2015-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

for-in/index.js:
  (*!
   * for-in <https://github.com/jonschlinkert/for-in>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

get-value/index.js:
  (*!
   * get-value <https://github.com/jonschlinkert/get-value>
   *
   * Copyright (c) 2014-2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

assign-symbols/index.js:
  (*!
   * assign-symbols <https://github.com/jonschlinkert/assign-symbols>
   *
   * Copyright (c) 2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

split-string/index.js:
  (*!
   * split-string <https://github.com/jonschlinkert/split-string>
   *
   * Copyright (c) 2015-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-extendable/index.js:
  (*!
   * is-extendable <https://github.com/jonschlinkert/is-extendable>
   *
   * Copyright (c) 2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

is-extendable/index.js:
  (*!
   * is-extendable <https://github.com/jonschlinkert/is-extendable>
   *
   * Copyright (c) 2015, Jon Schlinkert.
   * Licensed under the MIT License.
   *)

set-value/index.js:
  (*!
   * set-value <https://github.com/jonschlinkert/set-value>
   *
   * Copyright (c) 2014-2015, 2017, Jon Schlinkert.
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=chunk-K5IDBH47.js.map
